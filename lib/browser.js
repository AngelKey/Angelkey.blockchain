// Generated by IcedCoffeeScript 1.7.1-f
(function() {
  var Blockchain, base, jquery_to_req,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  base = require('./base');

  jquery_to_req = function($) {
    return function(_arg, cb) {
      var error, finish, qs, success, url;
      url = _arg.url, qs = _arg.qs;
      success = function(body, status, jqXHR) {
        return finish(true, body, jqXHR);
      };
      error = function(jqXHR, textStatus, erroThrown) {
        return finish(false, null, jqXHR);
      };
      finish = function(success, body, jqXHR) {
        var e, err, res, tmp;
        if ((tmp = cb) == null) {
          return;
        }
        cb = null;
        err = null;
        res = {};
        if ((res.statusCode = jqXHR.status) !== 200) {
          err = new Error("Non-OK HTTP error: " + res.statusCode);
          body = null;
        } else {
          try {
            body = JSON.parse(body);
          } catch (_error) {
            e = _error;
            err = new Error("bad json: " + e.message);
          }
        }
        return tmp(err, res, body);
      };
      return $.ajax({
        type: "GET",
        data: qs,
        url: url,
        success: success,
        error: error
      });
    };
  };

  exports.Blockchain = Blockchain = (function(_super) {
    __extends(Blockchain, _super);

    function Blockchain(arg) {
      arg.req = jquery_to_req($);
      Blockchain.__super__.constructor.call(this, arg);
    }

    return Blockchain;

  })(base.Blockchain);

}).call(this);
